cols <- names(covid_cases)
country_cols <- cols[startsWith(cols, "cases_")]
country_codes <- str_sub(country_cols, -3)
print(country_codes)
library(stringr)
cols <- names(covid_cases)
country_cols <- cols[startsWith(cols, "cases_")]
country_codes <- str_sub(country_cols, -3)
print(country_codes)
return(country_col)
country_col <- paste("cases_", country_code)
print(country_codes)
country_col <- paste("cases_", country_code)
country_col <- paste("cases_", country_codes)
percent <- ifelse(data$case_global == 0, NA,
100 * data[[country_col]] / data$case_global)
percent <- ifelse(data$case_global == 0, NA,
100 * data[[country_col]] / covid_cases$case_global)
percent <- ifelse(data$case_global == 0, NA,
100 * coivd_cases[[country_col]] / covid_cases$case_global)
compute_percent <- function(covid_cases,country_codes) {
library(stringr)
cols <- names(covid_cases)
country_cols <- cols[startsWith(cols, "cases_")]
country_codes <- str_sub(country_cols, -3)
print(country_codes)
country_col <- paste("cases_", country_codes)
percent <- ifelse(data$case_global == 0, NA,
100 * coivd_cases[[country_col]] / covid_cases$case_global)
return(country_col)
}
compute_percent <- function(covid_cases,country_codes) {
library(stringr)
cols <- names(covid_cases)
country_cols <- cols[startsWith(cols, "cases_")]
country_codes <- str_sub(country_cols, -3)
print(country_codes)
country_col <- paste("cases_", country_codes)
percent <- ifelse(data$case_global == 0, NA,
100 * coivd_cases[[country_col]] / covid_cases$case_global)
return(percent)
}
covid_cases$percent_usa <- compute_percent(covid_cases, "usa")
View(compute_percent)
covid_cases$percent_usa <- compute_percent(covid_cases, "usa")
View(compute_percent)
compute_percent <- function(covid_cases, country_code) {
country_col <- paste0("cases_", country_code)
# Kiểm tra cột có tồn tại không
if (!(country_col %in% names(covid_cases))) {
stop(paste("Cột", country_col, "không tồn tại trong dữ liệu."))
}
# Kiểm tra cột case_global
if (!("case_global" %in% names(covid_cases))) {
stop("Cột 'case_global' chưa tồn tại trong dữ liệu.")
}
# Tính phần trăm
percent <- ifelse(covid_cases$case_global == 0, NA,
100 * covid_cases[[country_col]] / covid_cases$case_global)
return(percent)
}
covid_cases$percent_usa <- compute_percent(covid_cases, "usa")
View(covid_cases)
compute_percent <- function(covid_cases, country_code) {
country_col <- paste0("cases_", country_code)
# Kiểm tra cột có tồn tại không
if (!(country_col %in% names(covid_cases))) {
stop(paste("Cột", country_col, "không tồn tại trong dữ liệu."))
}
# Kiểm tra cột case_global
if (!("case_global" %in% names(covid_cases))) {
stop("Cột 'case_global' chưa tồn tại trong dữ liệu.")
}
# Tính phần trăm
percent <- ifelse(covid_cases$case_global == 0, NA,
100 * covid_cases[[country_col]] / covid_cases$case_global)
return(percent)
}
compute_percent <- function(covid_cases, country_code) {
country_col <- paste0("cases_", country_code)
# Kiểm tra cột có tồn tại không
if (!(country_col %in% names(covid_cases))) {
stop(paste("Cột", country_col, "không tồn tại trong dữ liệu."))
}
# Kiểm tra cột case_global
if (!("case_global" %in% names(covid_cases))) {
stop("Cột 'case_global' chưa tồn tại trong dữ liệu.")
}
# Tính phần trăm
percent <- ifelse(covid_cases$case_global == 0, NA,
100 * covid_cases[[country_col]] / covid_cases$case_global)
return(percent)
}
covid_cases$percent_usa <- compute_percent(covid_cases, "usa")
covid_cases$percent_chn <- compute_percent(covid_cases, "chn")
covid_cases$percent_jpn <- compute_percent(covid_cases, "jpn")
#Nhiệm vụ 3: Tạo một function
?function
#Nhiệm vụ 3: Tạo một function
?function
covid_cases$"date"
a <- "date"
covid_cases$a
covid_cases[[a]]
#Nhiệm vụ 3: Tạo một function
compute_percent <- function(covid_cases, country_code) {
country_col <- paste0("cases_", country_code)
# Tính phần trăm
percent <- ifelse(covid_cases$case_global == 0, NA,
100 * covid_cases[[country_col]] / covid_cases$case_global)
return(percent)
}
covid_cases$percent_jpn <- compute_percent(covid_cases, "jpn")
country_col <- paste0("cases_", country_code)
covid_cases$percent_vnm <- compute_percent(covid_cases, "vnm")
#Nhiệm vụ 3: Tạo một function
compute_percent <- function(covid_cases, country_code) {
country_col <- paste0("cases_", country_code)
percent <- ifelse(covid_cases$case_global == 0, NA,
100 * covid_cases[[country_col]] / covid_cases$case_global)
return(percent)
}
country_col
covid_cases
#Nhiệm vụ 3: Tạo một function
compute_percent <- function( country_code) {
country_col <- paste0("cases_", country_code)
percent <- ifelse(covid_cases$case_global == 0, NA,
100 * covid_cases[[country_col]] / covid_cases$case_global)
return(percent)
}
covid_cases$percent_kor <- compute_percent(covid_cases, "kor")
covid_cases$percent_vnm <- compute_percent(covid_cases, "vnm")
#Nhiệm vụ 3: Tạo một function
data <- covid_cases
compute_percent <- function(country_code) {
country_col <- paste0("cases_", country_code)
percent <- ifelse(covid_cases$case_global == 0, NA,
100 * covid_cases[[country_col]] / covid_cases$case_global)
return(percent)
}
covid_cases$percent_vnm <- compute_percent(covid_cases, "vnm")
compute_percent <- function(covid_cases,country_code) {
country_col <- paste0("cases_", country_code)
percent <- ifelse(covid_cases$case_global == 0, NA,
100 * covid_cases[[country_col]] / covid_cases$case_global)
return(percent)
}
covid_cases$percent_vnm <- compute_percent(covid_cases, "vnm")
covid_cases$percent_kor <- compute_percent(covid_cases, "kor")
#Nhiệm vụ 3: Tạo một function
compute_percent <- function(data,country_code) {
country_col <- paste0("cases_", country_code)
percent <- ifelse(covid_cases$case_global == 0, NA,
100 * data[[country_col]] / covid_cases$case_global)
return(percent)
}
covid_cases$percent_kor <- compute_percent(covid_cases, "kor")
covid_cases$percent_myt <- compute_percent(covid_cases, "myt")
compute_percent <- function(data,country_code) {
country_col <- paste0("cases_", country_code)
percent <- ifelse(data$case_global == 0, NA,
100 * data[[country_col]] / data$case_global)
return(percent)
}
covid_cases$percent_myt <- compute_percent(covid_cases, "myt")
covid_cases$percent_chn <- compute_percent(covid_cases, "chn")
#Nhiệm vụ 3: Tạo một function
compute_percent <- function(data,country_code) {
country_col <- paste0("cases_", country_code)
percent <- ifelse(data$case_global == 0, NA,
100 * data[[country_col]] / data$case_global)
return(percent)
}
covid_cases$percent_myt <- compute_percent(covid_cases, "myt")
covid_cases$percent_chn <- compute_percent(covid_cases, "chn")
#Sử dụng function đó để tạo 3 cột mới cho bảng covid_cases:vnm,usa,sgp
covid_cases$percent_vnm <- compute_percent(covid_cases, "vnm")
covid_cases$percent_usa <- compute_percent(covid_cases, "usa")
covid_cases$percent_sgp <- compute_percent(covid_cases, "sgp")
#In bảng covid_cases cuối cùng, chỉ chọn các cột
library(dplyr)
covid_cases %>%
select_(date,percent_chn, percent_vnm, percent_usa, percent_sgp) %>%
print()
covid_cases %>%
select(date,percent_chn, percent_vnm, percent_usa, percent_sgp) %>%
print()
head(covid_cases)
View(covid_cases)
#Nhiệm vụ 4: Tạo bảng tóm tắt dữ liệu
library(skim)
#Nhiệm vụ 4: Tạo bảng tóm tắt dữ liệu
library(skimr)
skim(covid_cases)
skim(covid_cases[,c("percent_chn", "percent_vnm", "percent_usa", "percent_sgp")])
compute_stats(covid_cases, "cases_vnm")
covid_cases <- readRDS("day1/data/covid_cases.rds")
covid_cases <- readRDS("~/GitHub/R-Together/day1/data/covid_cases.rds")
covid_cases <- readRDS("~/GitHub/R-Together/day1/data/covid_cases.rds")
compute_stats <- function(data, colname) {
return(
c(
min = min(data[[colname]]),
q1 = quantile(data[[colname]], 0.25, names=FALSE),
median = median(data[[colname]]),
q3 = quantile(data[[colname]], 0.75, names=FALSE),
max = max(data[[colname]])
)
)
}
compute_stats(covid_cases, "cases_vnm")
compute_stats(covid_cases, "cases_jpn")
head(df)
df_plot
country <- c("Angola", "Papua New Guinea", "Pakistan", "Chad", "Ethiopia", "Kenya", "Nigeria", "Liberia", "Burkina Faso", "India")
coverage <- c(-0.14, -0.35, 0.12, 0.14, 0.32, 0.07, 0.2, 0.18, 0.3, 0.35)
inequality <- c(0.1, 0.08, 0.05, 0.01, 0.005, -0.06, -0.07, -0.11, -0.13, -0.16)
df_plot <- data.frame(country, coverage, inequality)
df_plot
#Nhiệm vụ 1: Nhập dữ liệu
covid_cases <- readRDS("~/GitHub/R-Together/day1/data/covid_cases.rds")
#Nhiệm vụ 1: Nhập dữ liệu
covid_cases <- readRDS("day1/data/covid_cases.rds")
getwd()
#Nhiệm vụ 1: Nhập dữ liệu
covid_cases <- readRDS("data/covid_cases.rds")
library(tidyverse)
ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point(color = "blue") +
scale_x_continuous("Weight (1000 lbs)") +
scale_y_continuous("Miles Per Gallon") +
ggtitle("MPG vs. Weight") +
theme_bw()
ggplot(df_plot,ase(x = coverage,y=inequality))
ggplot(df_plot,aes(x = coverage,y=inequality))
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point() +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "yellow") +
geom_text(label=country)
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country)
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.2, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.5, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.3, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.4, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.2, 0.55)) +
ylim(c(-0.4, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.2, 0.55)) +
ylim(c(-0.4, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(color = "red") +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
df_plot
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(aes(size=size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y=inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
df_plot
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
df_plot$size <- c(1.1, 0.6, 3, 1, 2, 1.1, 3, 0.7, 1.1, 8)
df_plot$color <- c("purple", "blue", "yellow", "purple", "purple", "purple", "purple", "purple", "purple", "yellow")
df_plot
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.1, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.3, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.3, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.3, vjust = 0.25) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.25) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
set.seed(123)
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color())) +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
df_plot
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw()
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("blue","yellow","purple"),
labels = c("blue","yellow","purple"))
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("purple","blue","yellow"),
labels = c("purple","blue","yellow"))
df_plot$size <- c(1.1, 0.6, 3, 1, 2, 1)
df_plot$size <- cc(1.1, 0.6, 3, 1, 2, 1.1, 3, 0.7, 1.1, 8)
df_plot$size <- c(1.1, 0.6, 3, 1, 2, 1.1, 3, 0.7, 1.1, 8)
df_plot$color <- c("purple", "blue", "yellow", "purple", "purple", "purple", "purple", "purple", "purple", "yellow")
df_plot
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("purple","blue","yellow"),
labels = c("purple","blue","yellow"))
df_plot$size <- c(1.1, 0.6, 3, 1, 2, 1.1, 3, 0.7, 1.1, 8)
df_plot$color <- c("purple", "red", "yellow", "purple", "purple", "purple", "purple", "purple", "purple", "yellow")
df_plot
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("purple","red","yellow"),
labels = c("purple","red","yellow"))
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("blue","purple",,"yellow"),
labels = c("blue","purple",,"yellow"))
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("blue","purple",,"yellow"),
labels = c("blue","purple",,"yellow"))
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("blue","purple","yellow"),
labels = c("blue","purple","yellow"))
f_plot$size <- c(1.1, 0.6, 3, 1, 2, 1.1, 3, 0.7, 1.1, 8)
df_plot$size <- c(1.1, 0.6, 3, 1, 2, 1.1, 3, 0.7, 1.1, 8)
df_plot$color <- c("purple", "blue", "yellow", "purple", "purple", "purple", "purple", "purple", "purple", "yellow")
df_plot
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("blue","yellow","purple"),
labels = c("blue","yellow","purple"))
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("blue","purple","yellow",),
labels = c("blue","purple","yellow"))
scale_color_manual(values = c("blue","purple","yellow",),
labels = c("blue","purple","yellow"))
ggplot(df_plot,aes(x = coverage,y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(label=country, hjust = -0.2, vjust = 0.3) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1)) +
theme_bw() +
scale_color_manual(values = c("blue","purple","yellow"),
labels = c("blue","purple","yellow"))
set.seed(123)
np <- 50
rd <- data.frame(
country = rep("", np),
coverage = rnorm(n = np, mean = 0.1, sd = 0.12),
inequality = rnorm(n = np, mean = -0.05, sd = 0.04),
size = rnorm(n = np, mean = 1, sd = 0.4),
color = sample(
c("red", "green", "darkblue", "yellow", "blue", "purple"),
np,
replace = T
)
)
head(rd)
df_plot <- rbind(df_plot, rd)
ggplot(df_plot, aes(x = coverage, y = inequality)) +
geom_point(aes(size = size, color = color)) +
geom_text(aes(label = country), hjust = -0.2, vjust = 0.2) +
xlim(c(-0.35, 0.55)) +
ylim(c(-0.17, 0.1))
